// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(sel=address,in=load,a=a,b=b,c=c,d=d,e=e,f=f,g=g,h=h);
    Register(in=in,out=out1,load=a);
    Register(in=in,out=out2,load=b);
    Register(in=in,out=out3,load=c);
    Register(in=in,out=out4,load=d);
    Register(in=in,out=out5,load=e);
    Register(in=in,out=out6,load=f);
    Register(in=in,out=out7,load=g);
    Register(in=in,out=out8,load=h);
    Mux8Way16(a=out1,b=out2,c=out3,d=out4,e=out5,f=out6,g=out7,h=out8,out=out,sel=address);
}